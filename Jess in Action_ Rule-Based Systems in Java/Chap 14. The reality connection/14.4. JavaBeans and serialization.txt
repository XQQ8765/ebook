14.4. JavaBeans and serialization
The notion of pickling is part of the JavaBeans concept. The state of an application made out of JavaBeans is fully specified by the values of all the properties of those Beans together with information about the connections between the Beans. A Java-Beans framework can create an instant application by storing the property values and connection information in a file and then later reconstituting the original Beans. Generally, Java¡¯s serialization API is used to do the pickling, so most Java-Beans implement the java.io.Serializable interface. It¡¯s easy to add this capability to your own JavaBeans: just declare that the class implements Serializable. There are no methods in the Serializable interface; it is a tagging interface used to signify to the Java virtual machine that it is OK to serialize the data from instances of the class.

Jess includes two built-in functions, bload and bsave, that can save and restore Jess¡¯s state on any Java input and output streams using Java¡¯s serialization API. If you intend to use these functions, be sure any Java objects you add to working memory implement java.io.Serializable, or these functions will fail. You won¡¯t be using bload or bsave in the HVAC Controller application, so it won¡¯t be necessary to make the Beans from this chapter implement this interface.

